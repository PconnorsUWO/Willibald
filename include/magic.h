//
// Created by Alexander King Perocho on 2025-03-11.
//

#ifndef MAGIC_H
#define MAGIC_H

#include "bitboard.h"

namespace Magic
{
    const int BISHOP_ATTACK_COUNT_MASK[64] =
    {
        6, 5, 5, 5, 5, 5, 5, 6,
        5, 5, 5, 5, 5, 5, 5, 5,
        5, 5, 7, 7, 7, 7, 5, 5,
        5, 5, 7, 9, 9, 7, 5, 5,
        5, 5, 7, 9, 9, 7, 5, 5,
        5, 5, 7, 7, 7, 7, 5, 5,
        5, 5, 5, 5, 5, 5, 5, 5,
        6, 5, 5, 5, 5, 5, 5, 6
    };

    const int ROOK_ATTACK_COUNT_MASK[64] =
    {
        12, 11, 11, 11, 11, 11, 11, 12,
        11, 10, 10, 10, 10, 10, 10, 11,
        11, 10, 10, 10, 10, 10, 10, 11,
        11, 10, 10, 10, 10, 10, 10, 11,
        11, 10, 10, 10, 10, 10, 10, 11,
        11, 10, 10, 10, 10, 10, 10, 11,
        11, 10, 10, 10, 10, 10, 10, 11,
        12, 11, 11, 11, 11, 11, 11, 12
    };

    const Bitboard ROOK_MAGIC_NUMBERS[64] =
    {
        Bitboard(0x8a80104000800020ULL),
        Bitboard(0x140002000100040ULL),
        Bitboard(0x2801880a0017001ULL),
        Bitboard(0x100081001000420ULL),
        Bitboard(0x200020010080420ULL),
        Bitboard(0x3001c0002010008ULL),
        Bitboard(0x8480008002000100ULL),
        Bitboard(0x2080088004402900ULL),
        Bitboard(0x800098204000ULL),
        Bitboard(0x2024401000200040ULL),
        Bitboard(0x100802000801000ULL),
        Bitboard(0x120800800801000ULL),
        Bitboard(0x208808088000400ULL),
        Bitboard(0x2802200800400ULL),
        Bitboard(0x2200800100020080ULL),
        Bitboard(0x801000060821100ULL),
        Bitboard(0x80044006422000ULL),
        Bitboard(0x100808020004000ULL),
        Bitboard(0x12108a0010204200ULL),
        Bitboard(0x140848010000802ULL),
        Bitboard(0x481828014002800ULL),
        Bitboard(0x8094004002004100ULL),
        Bitboard(0x4010040010010802ULL),
        Bitboard(0x20008806104ULL),
        Bitboard(0x100400080208000ULL),
        Bitboard(0x2040002120081000ULL),
        Bitboard(0x21200680100081ULL),
        Bitboard(0x20100080080080ULL),
        Bitboard(0x2000a00200410ULL),
        Bitboard(0x20080800400ULL),
        Bitboard(0x80088400100102ULL),
        Bitboard(0x80004600042881ULL),
        Bitboard(0x4040008040800020ULL),
        Bitboard(0x440003000200801ULL),
        Bitboard(0x4200011004500ULL),
        Bitboard(0x188020010100100ULL),
        Bitboard(0x14800401802800ULL),
        Bitboard(0x2080040080800200ULL),
        Bitboard(0x124080204001001ULL),
        Bitboard(0x200046502000484ULL),
        Bitboard(0x480400080088020ULL),
        Bitboard(0x1000422010034000ULL),
        Bitboard(0x30200100110040ULL),
        Bitboard(0x100021010009ULL),
        Bitboard(0x2002080100110004ULL),
        Bitboard(0x202008004008002ULL),
        Bitboard(0x20020004010100ULL),
        Bitboard(0x2048440040820001ULL),
        Bitboard(0x101002200408200ULL),
        Bitboard(0x40802000401080ULL),
        Bitboard(0x4008142004410100ULL),
        Bitboard(0x2060820c0120200ULL),
        Bitboard(0x1001004080100ULL),
        Bitboard(0x20c020080040080ULL),
        Bitboard(0x2935610830022400ULL),
        Bitboard(0x44440041009200ULL),
        Bitboard(0x280001040802101ULL),
        Bitboard(0x2100190040002085ULL),
        Bitboard(0x80c0084100102001ULL),
        Bitboard(0x4024081001000421ULL),
        Bitboard(0x20030a0244872ULL),
        Bitboard(0x12001008414402ULL),
        Bitboard(0x2006104900a0804ULL),
        Bitboard(0x1004081002402ULL)
    };

    const Bitboard BISHOP_MAGIC_NUMBERS[64] =
    {
        Bitboard(0x40040844404084ULL),
        Bitboard(0x2004208a004208ULL),
        Bitboard(0x10190041080202ULL),
        Bitboard(0x108060845042010ULL),
        Bitboard(0x581104180800210ULL),
        Bitboard(0x2112080446200010ULL),
        Bitboard(0x1080820820060210ULL),
        Bitboard(0x3c0808410220200ULL),
        Bitboard(0x4050404440404ULL),
        Bitboard(0x21001420088ULL),
        Bitboard(0x24d0080801082102ULL),
        Bitboard(0x1020a0a020400ULL),
        Bitboard(0x40308200402ULL),
        Bitboard(0x4011002100800ULL),
        Bitboard(0x401484104104005ULL),
        Bitboard(0x801010402020200ULL),
        Bitboard(0x400210c3880100ULL),
        Bitboard(0x404022024108200ULL),
        Bitboard(0x810018200204102ULL),
        Bitboard(0x4002801a02003ULL),
        Bitboard(0x85040820080400ULL),
        Bitboard(0x810102c808880400ULL),
        Bitboard(0xe900410884800ULL),
        Bitboard(0x8002020480840102ULL),
        Bitboard(0x220200865090201ULL),
        Bitboard(0x2010100a02021202ULL),
        Bitboard(0x152048408022401ULL),
        Bitboard(0x20080002081110ULL),
        Bitboard(0x4001001021004000ULL),
        Bitboard(0x800040400a011002ULL),
        Bitboard(0xe4004081011002ULL),
        Bitboard(0x1c004001012080ULL),
        Bitboard(0x8004200962a00220ULL),
        Bitboard(0x8422100208500202ULL),
        Bitboard(0x2000402200300c08ULL),
        Bitboard(0x8646020080080080ULL),
        Bitboard(0x80020a0200100808ULL),
        Bitboard(0x2010004880111000ULL),
        Bitboard(0x623000a080011400ULL),
        Bitboard(0x42008c0340209202ULL),
        Bitboard(0x209188240001000ULL),
        Bitboard(0x400408a884001800ULL),
        Bitboard(0x110400a6080400ULL),
        Bitboard(0x1840060a44020800ULL),
        Bitboard(0x90080104000041ULL),
        Bitboard(0x201011000808101ULL),
        Bitboard(0x1a2208080504f080ULL),
        Bitboard(0x8012020600211212ULL),
        Bitboard(0x500861011240000ULL),
        Bitboard(0x180806108200800ULL),
        Bitboard(0x4000020e01040044ULL),
        Bitboard(0x300000261044000aULL),
        Bitboard(0x802241102020002ULL),
        Bitboard(0x20906061210001ULL),
        Bitboard(0x5a84841004010310ULL),
        Bitboard(0x4010801011c04ULL),
        Bitboard(0xa010109502200ULL),
        Bitboard(0x4a02012000ULL),
        Bitboard(0x500201010098b028ULL),
        Bitboard(0x8040002811040900ULL),
        Bitboard(0x28000010020204ULL),
        Bitboard(0x6000020202d0240ULL),
        Bitboard(0x8918844842082200ULL),
        Bitboard(0x4010011029020020ULL)
    };
};

#endif //MAGIC_H


//    const Bitboard ROOK_MAGIC_NUMBERS[64] = {
//        Bitboard(0x8a80104000800020ULL),
//        Bitboard(0x140002000100040ULL),
//        Bitboard(0x2801880a0017001ULL),
//        Bitboard(0x100081001000420ULL),
//        Bitboard(0x200020010080420ULL),
//        Bitboard(0x3001c0002010008ULL),
//        Bitboard(0x8480008002000100ULL),
//        Bitboard(0x2080088004402900ULL),
//        Bitboard(0x800098204000ULL),
//        Bitboard(0x2024401000200040ULL),
//        Bitboard(0x100802000801000ULL),
//        0x120800800801000ULL,
//        0x208808088000400ULL,
//        0x2802200800400ULL,
//        0x2200800100020080ULL,
//        0x801000060821100ULL,
//        0x80044006422000ULL,
//        0x100808020004000ULL,
//        0x12108a0010204200ULL,
//        0x140848010000802ULL,
//        0x481828014002800ULL,
//        0x8094004002004100ULL,
//        0x4010040010010802ULL,
//        0x20008806104ULL,
//        0x100400080208000ULL,
//        0x2040002120081000ULL,
//        0x21200680100081ULL,
//        0x20100080080080ULL,
//        0x2000a00200410ULL,
//        0x20080800400ULL,
//        0x80088400100102ULL,
//        0x80004600042881ULL,
//        0x4040008040800020ULL,
//        0x440003000200801ULL,
//        0x4200011004500ULL,
//        0x188020010100100ULL,
//        0x14800401802800ULL,
//        0x2080040080800200ULL,
//        0x124080204001001ULL,
//        0x200046502000484ULL,
//        0x480400080088020ULL,
//        0x1000422010034000ULL,
//        0x30200100110040ULL,
//        0x100021010009ULL,
//        0x2002080100110004ULL,
//        0x202008004008002ULL,
//        0x20020004010100ULL,
//        0x2048440040820001ULL,
//        0x101002200408200ULL,
//        0x40802000401080ULL,
//        0x4008142004410100ULL,
//        0x2060820c0120200ULL,
//        0x1001004080100ULL,
//        0x20c020080040080ULL,
//        0x2935610830022400ULL,
//        0x44440041009200ULL,
//        0x280001040802101ULL,
//        0x2100190040002085ULL,
//        0x80c0084100102001ULL,
//        0x4024081001000421ULL,
//        0x20030a0244872ULL,
//        0x12001008414402ULL,
//        0x2006104900a0804ULL,
//        0x1004081002402ULL};
//    const Bitboard BISHOP_MAGIC_NUMBERS[64] = {
//        0x40040844404084ULL,
//        0x2004208a004208ULL,
//        0x10190041080202ULL,
//        0x108060845042010ULL,
//        0x581104180800210ULL,
//        0x2112080446200010ULL,
//        0x1080820820060210ULL,
//        0x3c0808410220200ULL,
//        0x4050404440404ULL,
//        0x21001420088ULL,
//        0x24d0080801082102ULL,
//        0x1020a0a020400ULL,
//        0x40308200402ULL,
//        0x4011002100800ULL,
//        0x401484104104005ULL,
//        0x801010402020200ULL,
//        0x400210c3880100ULL,
//        0x404022024108200ULL,
//        0x810018200204102ULL,
//        0x4002801a02003ULL,
//        0x85040820080400ULL,
//        0x810102c808880400ULL,
//        0xe900410884800ULL,
//        0x8002020480840102ULL,
//        0x220200865090201ULL,
//        0x2010100a02021202ULL,
//        0x152048408022401ULL,
//        0x20080002081110ULL,
//        0x4001001021004000ULL,
//        0x800040400a011002ULL,
//        0xe4004081011002ULL,
//        0x1c004001012080ULL,
//        0x8004200962a00220ULL,
//        0x8422100208500202ULL,
//        0x2000402200300c08ULL,
//        0x8646020080080080ULL,
//        0x80020a0200100808ULL,
//        0x2010004880111000ULL,
//        0x623000a080011400ULL,
//        0x42008c0340209202ULL,
//        0x209188240001000ULL,
//        0x400408a884001800ULL,
//        0x110400a6080400ULL,
//        0x1840060a44020800ULL,
//        0x90080104000041ULL,
//        0x201011000808101ULL,
//        0x1a2208080504f080ULL,
//        0x8012020600211212ULL,
//        0x500861011240000ULL,
//        0x180806108200800ULL,
//        0x4000020e01040044ULL,
//        0x300000261044000aULL,
//        0x802241102020002ULL,
//        0x20906061210001ULL,
//        0x5a84841004010310ULL,
//        0x4010801011c04ULL,
//        0xa010109502200ULL,
//        0x4a02012000ULL,
//        0x500201010098b028ULL,
//        0x8040002811040900ULL,
//        0x28000010020204ULL,
//        0x6000020202d0240ULL,
//        0x8918844842082200ULL,
//        0x4010011029020020ULL};
//}
